#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('=====================================================');
console.log('      Thi·∫øt l·∫≠p c·∫•u tr√∫c th∆∞ m·ª•c m·ªõi cho SLM App     ');
console.log('=====================================================\n');

console.log('B∆∞·ªõc 1: T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c...');
try {
  execSync('mkdir -p src/components/{auth,layout,products,profile,ui/{buttons,cards,forms,modals,typography},shared} src/hooks src/context src/services src/utils/{helpers,formatters,validation} src/constants src/models src/styles', { stdio: 'inherit' });
  console.log('‚úÖ T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c th√†nh c√¥ng.\n');
} catch (error) {
  console.error('‚ùå L·ªói khi t·∫°o c·∫•u tr√∫c th∆∞ m·ª•c:', error);
  process.exit(1);
}

console.log('B∆∞·ªõc 2: T·ªï ch·ª©c l·∫°i th∆∞ m·ª•c app...');
try {
  execSync('mkdir -p app/\\(auth\\) app/\\(profile\\) app/\\(products\\) app/\\(brands\\) app/\\(quotes\\) app/\\(contacts\\) app/\\(stats\\)', { stdio: 'inherit' });
  console.log('‚úÖ T·ªï ch·ª©c l·∫°i th∆∞ m·ª•c app th√†nh c√¥ng.\n');
} catch (error) {
  console.error('‚ùå L·ªói khi t·ªï ch·ª©c l·∫°i th∆∞ m·ª•c app:', error);
  process.exit(1);
}

console.log('B∆∞·ªõc 3: C·∫≠p nh·∫≠t c√°c ƒë∆∞·ªùng d·∫´n import...');
try {
  execSync('node scripts/update-imports.js', { stdio: 'inherit' });
  console.log('‚úÖ C·∫≠p nh·∫≠t c√°c ƒë∆∞·ªùng d·∫´n import th√†nh c√¥ng.\n');
} catch (error) {
  console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t c√°c ƒë∆∞·ªùng d·∫´n import:', error);
  process.exit(1);
}

console.log('B∆∞·ªõc 4: T·∫°o c√°c symbolic links...');
try {
  execSync('node scripts/create-symlinks.js', { stdio: 'inherit' });
  console.log('‚úÖ T·∫°o c√°c symbolic links th√†nh c√¥ng.\n');
} catch (error) {
  console.error('‚ùå L·ªói khi t·∫°o c√°c symbolic links:', error);
  process.exit(1);
}

console.log('B∆∞·ªõc 5: Ki·ªÉm tra l·ªói TypeScript...');
try {
  execSync('npx tsc --noEmit', { stdio: 'inherit' });
  console.log('‚úÖ Ki·ªÉm tra l·ªói TypeScript th√†nh c√¥ng.\n');
} catch (error) {
  console.error('‚ùå L·ªói TypeScript ƒë∆∞·ª£c ph√°t hi·ªán. Vui l√≤ng ki·ªÉm tra l·∫°i.\n');
  console.error('   B·∫°n c√≥ th·ªÉ ch·∫°y "npx tsc --noEmit" ƒë·ªÉ xem chi ti·∫øt l·ªói.');
  console.error('   Sau khi s·ª≠a l·ªói, h√£y ch·∫°y "npm run update-imports && npm run create-symlinks".\n');
}

console.log('=====================================================');
console.log('      Thi·∫øt l·∫≠p c·∫•u tr√∫c th∆∞ m·ª•c m·ªõi ho√†n t·∫•t!      ');
console.log('=====================================================\n');

console.log('üìù L∆∞u √Ω:');
console.log('1. H√£y ƒë·ªçc file MIGRATION_GUIDE.md ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v·ªÅ c·∫•u tr√∫c m·ªõi.');
console.log('2. ƒê·ªÉ c·∫≠p nh·∫≠t l·∫°i ƒë∆∞·ªùng d·∫´n import, ch·∫°y "npm run update-imports".');
console.log('3. ƒê·ªÉ t·∫°o l·∫°i c√°c symbolic links, ch·∫°y "npm run create-symlinks".');
console.log('4. ƒê·ªÉ x√≥a cache Metro, ch·∫°y "npm run clear-cache".');
console.log('5. ƒê·ªÉ thi·∫øt l·∫≠p l·∫°i to√†n b·ªô d·ª± √°n, ch·∫°y "npm run setup".\n');

console.log('Ch√∫c b·∫°n c√≥ tr·∫£i nghi·ªám t·ªët v·ªõi c·∫•u tr√∫c th∆∞ m·ª•c m·ªõi! üöÄ'); 